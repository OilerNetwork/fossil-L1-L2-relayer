services:
  anvil:
    image: fossil-anvil:latest
    networks:
      - fossil
    ports:
      - "8545:8545"
    env_file:
      - ${ENV_FILE:-.env.local}
    healthcheck:
      test: ["CMD", "cast", "block-number"]
      interval: 5s
      timeout: 5s
      retries: 5

  deploy-ethereum:
    image: fossil-deploy:latest
    networks:
      - fossil
    env_file:
      - ${ENV_FILE:-.env.local}
    volumes:
      - .:/app
    depends_on:
      anvil:
        condition: service_healthy
    command: ["./scripts/deploy-ethereum.sh", "local"]

  katana:
    image: fossil-katana:latest
    networks:
      - fossil
    ports:
      - "5050:5050"
    volumes:
      - ./config:/app/config
    command: ["katana", "--messaging", "/app/config/anvil.messaging.json", "--disable-fee", "--disable-validate", "--host", "0.0.0.0"]
    depends_on:
      anvil:
        condition: service_healthy
      deploy-ethereum:
        condition: service_completed_successfully
    healthcheck:
      test: ["CMD", "katana", "--version"]
      interval: 5s
      timeout: 5s
      retries: 5

  deploy-starknet:
    image: fossil-deploy:latest
    networks:
      - fossil
    env_file:
      - ${ENV_FILE:-.env.local}
    volumes:
      - .:/app
    depends_on:
      katana:
        condition: service_healthy
    command: ["./scripts/deploy-starknet.sh", "local"]

  mmr-builder:
    image: fossil-build-mmr:latest
    networks:
      - fossil
    env_file:
      - ${ENV_FILE:-.env.local}
    environment:
      - RUST_BACKTRACE=1
      - ANVIL_URL=http://anvil:8545
    depends_on:
      deploy-starknet:
        condition: service_completed_successfully

  client:
    image: fossil-client:latest
    networks:
      - fossil
    env_file:
      - ${ENV_FILE:-.env.local}
    volumes:
      - .:/app
    command: ["client"]
    depends_on:
      deploy-starknet:
        condition: service_completed_successfully
      mmr-builder:
        condition: service_completed_successfully

  relayer:
    image: fossil-relayer:latest
    networks:
      - fossil
    env_file:
      - ${ENV_FILE:-.env.local}
    volumes:
      - ./scripts:/app/scripts
    command: ["/bin/sh", "/app/scripts/run_relayer.sh"]
    restart: unless-stopped
    depends_on:
      deploy-starknet:
        condition: service_completed_successfully
      mmr-builder:
        condition: service_completed_successfully
    healthcheck:
      test: ["CMD", "pgrep", "-f", "relayer"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  fossil:
    name: fossil-network