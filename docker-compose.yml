services:
  anvil:
    image: anvil:latest
    networks:
      - fossil
    ports:
      - "8545:8545"
    env_file:
      - ${ENV_FILE:-.env.docker}
    healthcheck:
      test: ["CMD", "cast", "block-number"]
      interval: 5s
      timeout: 5s
      retries: 5

  deploy-ethereum:
    image: deploy:latest
    networks:
      - fossil
    env_file:
      - ${ENV_FILE:-.env.docker}
    volumes:
      - .:/app
    depends_on:
      anvil:
        condition: service_healthy
    command: ["./scripts/deploy-ethereum.sh", "docker"]

  katana:
    image: katana:latest
    networks:
      - fossil
    ports:
      - "5050:5050"
    volumes:
      - ./config:/app/config
    command: 
      - katana
      - --messaging
      - /app/config/anvil.messaging.docker.json
      - --dev
      - --dev.no-fee
      - --dev.no-account-validation
      - --http.addr
      - 0.0.0.0
    depends_on:
      anvil:
        condition: service_healthy
      deploy-ethereum:
        condition: service_completed_successfully
    healthcheck:
      test: ["CMD", "katana", "--version"]
      interval: 5s
      timeout: 5s
      retries: 5

  deploy-starknet:
    image: deploy:latest
    networks:
      - fossil
    env_file:
      - ${ENV_FILE:-.env.docker}
    volumes:
      - .:/app
    depends_on:
      katana:
        condition: service_healthy
    command: ["./scripts/deploy-starknet.sh", "docker"]



networks:
  fossil:
    name: fossil-network