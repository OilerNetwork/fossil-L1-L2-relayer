# Stage 1: Build the application
FROM rust:alpine AS builder

# Set up the working directory
WORKDIR /app

# Install build dependencies including OpenSSL static libraries
RUN apk add --no-cache \
    musl-dev \
    git \
    openssl-dev \
    openssl-libs-static \
    pkgconfig \
    gcc

# Set environment variables for static linking
ENV OPENSSL_STATIC=1
ENV OPENSSL_LIB_DIR=/usr/lib
ENV OPENSSL_INCLUDE_DIR=/usr/include/openssl

# Copy Cargo.toml and Cargo.lock
COPY Cargo.toml Cargo.lock ./

# Copy all workspace crates
COPY crates ./crates

# Build only relayer
RUN cargo build --release --package relayer

# Stage 2: Create a minimal runtime image
FROM alpine:latest

# Update repositories and install SSL certificates
RUN echo "https://mirror.ette.biz/alpine/v3.19/main" > /etc/apk/repositories && \
    echo "https://mirror.ette.biz/alpine/v3.19/community" >> /etc/apk/repositories && \
    apk update && \
    apk add --no-cache ca-certificates openssl

# Copy the compiled binary from the builder stage to /usr/local/bin
COPY --from=builder /app/target/release/relayer /usr/local/bin/relayer

# Make the binary executable
RUN chmod +x /usr/local/bin/relayer

# Remove the ENTRYPOINT and CMD directives
# Let docker-compose handle the command
