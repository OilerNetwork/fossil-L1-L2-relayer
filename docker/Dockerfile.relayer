# Stage 1: Build the application
FROM rust:latest AS builder

# Set up the working directory
WORKDIR /app

# Step 1: Copy the workspace Cargo.toml and Cargo.lock
COPY Cargo.toml Cargo.lock ./

# Step 2: Copy pre-fetched dependencies and vendor directory
COPY .cargo /usr/local/cargo
COPY vendor /usr/local/cargo/registry

# Create cargo config for vendored dependencies
RUN mkdir -p /usr/local/cargo/registry && \
    echo '[source.crates-io]\n\
replace-with = "vendored-sources"\n\
\n\
[source."git+https://github.com/xJonathanLEI/starknet-rs.git?branch=master"]\n\
git = "https://github.com/xJonathanLEI/starknet-rs.git"\n\
branch = "master"\n\
replace-with = "vendored-sources"\n\
\n\
[source."git+https://github.com/risc0/RustCrypto-hashes.git?tag=sha2-v0.10.8-risczero.0"]\n\
git = "https://github.com/risc0/RustCrypto-hashes.git"\n\
tag = "sha2-v0.10.8-risczero.0"\n\
replace-with = "vendored-sources"\n\
\n\
[source."git+https://github.com/ametel01/eth-rlp-verify.git"]\n\
git = "https://github.com/ametel01/eth-rlp-verify.git"\n\
replace-with = "vendored-sources"\n\
\n\
[source."git+https://github.com/ametel01/garaga.git"]\n\
git = "https://github.com/ametel01/garaga.git"\n\
replace-with = "vendored-sources"\n\
\n\
[source."git+https://github.com/ametel01/rust-accumulators.git?branch=feat/sha2-hasher"]\n\
git = "https://github.com/ametel01/rust-accumulators.git"\n\
branch = "feat/sha2-hasher"\n\
replace-with = "vendored-sources"\n\
\n\
[source."git+https://github.com/risc0/risc0-ethereum?tag=v1.1.4"]\n\
git = "https://github.com/risc0/risc0-ethereum"\n\
tag = "v1.1.4"\n\
replace-with = "vendored-sources"\n\
\n\
[source."git+https://github.com/lambdaclass/lambdaworks.git"]\n\
git = "https://github.com/lambdaclass/lambdaworks.git"\n\
replace-with = "vendored-sources"\n\
\n\
[source."git+https://github.com/OpenZeppelin/openzeppelin-contracts.git"]\n\
git = "https://github.com/OpenZeppelin/openzeppelin-contracts.git"\n\
replace-with = "vendored-sources"\n\
\n\
[source.vendored-sources]\n\
directory = "/usr/local/cargo/registry"\n\
\n\
[net]\n\
git-fetch-with-cli = true' > /usr/local/cargo/config.toml

# Step 3: Copy the workspace crates
COPY crates ./crates

# Step 4: Copy OpenZeppelin contracts to the expected location
COPY vendor/openzeppelin-contracts /usr/local/cargo/registry/openzeppelin-contracts

# Step 5: Build the application
RUN cargo build --release --package relayer

# Stage 2: Create a minimal runtime image
FROM debian:bookworm-slim

# Set up the working directory
WORKDIR /app

# Install runtime dependencies with OpenSSL 3
RUN apt-get update && apt-get install -y \
    ca-certificates \
    openssl \
    libssl3 \
    && rm -rf /var/lib/apt/lists/*

# Copy the compiled binary from the builder stage
COPY --from=builder /app/target/release/relayer .

# Define the entrypoint
ENTRYPOINT ["./relayer"]
